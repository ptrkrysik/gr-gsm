/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(decryption/decryption.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(0327803fb3a06810cd7b67f43333a96b)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gsm/decryption/decryption.h>
// pydoc.h is automatically generated in the build directory
#include <decryption_pydoc.h>

void bind_decryption(py::module& m)
{

    using decryption    = ::gr::gsm::decryption;


    py::class_<decryption, gr::block, gr::basic_block,
        std::shared_ptr<decryption>>(m, "decryption", D(decryption))

        .def(py::init(&decryption::make),
           py::arg("k_c"),
           py::arg("a5_version"),
           D(decryption,make)
        )
        




        
        .def("set_k_c",&decryption::set_k_c,       
            py::arg("k_c"),
            D(decryption,set_k_c)
        )


        
        .def("set_a5_version",&decryption::set_a5_version,       
            py::arg("a5_version"),
            D(decryption,set_a5_version)
        )

        ;




}








